
'use client'
import { useEffect } from "react";
 import axios from 'axios'
import { useState } from "react";
import { toast } from "react-toastify";


export default function opps() {


  useEffect(()=>{
     toast.success('this toast')
  },[])
  const [nam,setnam]=useState();

  console.log(nam)


let api= async()=>{

     const app= {name:'post'}
     const dta=  await axios.post('http://localhost:5050/',app)

  console.log(dta.data)

  
  // let res= await fetch('http://localhost:5050/');
  // let ress= await res.json();
  // console.log(ress)
}
   



  for(let a=0; a<5;a++){
    console.log(`my ${a} how is bater thien you ${a*2}`)
}

const con=()=>{
    console.log("hello sahil inida üòä")
}



console.log(nam)
  
    return (
      

        <div className="bg-gray-100 m-1">
  <button onClick={api()} className="bg-green-400">api call </button>

     <input placeholder="NAM " onChange={(e)=>setnam(e.target.value)}/>

    
  <div className="m-2 ">

<div className="flex">
<h1 className="  text-3xl tb:text-2xl m-auto   md: text-red-500"> vv java sript ‡§Æ‡•á‡§Ç opps ‡§ï‡§ø‡§§‡§®‡•á ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡•á ‡§π‡•ã‡§§‡•á ‡§π‡•à      </h1> 

</div>


<p className="my-4">


‡§ú‡•à‡§∏‡§æ ‡§ï‡•Ä ‡§π‡§Æ ‡§ú‡§æ‡§®‡§§‡•á ‡§π‡•à ‡§ï‡•Ä programing languge  ‡§Æ‡•á‡§Ç ‡§ï‡§π‡•Ä  ‡§∏‡§æ‡§∞‡•á concept ‡§π‡•ã‡§§‡•á ‡§π‡•à ‡§§‡•ã ‡§Ü‡§ú ‡§π‡§Æ ‡§ú‡§æ‡§®‡§§‡•á ‡§π‡•à ‡§ï‡•Ä 
‡§ï‡•Ä opps ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à <span className="text-red-700 md:text-2xl ">what is opps </span> opps ‡§ï‡§æ concept ‡§Ü‡§™‡§ï‡•ã ‡§∏‡§æ‡§∞‡•á programing languge me ‡§ï‡•ã ‡§Æ‡§ø‡§≤ 
‡§ú‡§æ‡§Ø‡•á‡§ó‡§æ ‡§§‡•ã ‡§π‡§Æ ‡§ú‡§æ‡§®‡§§‡•á ‡§π‡•à ‡§ï‡•Ä opps ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à ‡§î‡§∞ ‡§ï‡•à‡§∏‡•á ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à 
</p>

<div className="bg-red-500 flex  justify-center p-2 sm:w-[93%]  md:mx-[30%]">
<img src="../img/py.png" className="md:hover:animate-bounce duration-500 rounded-md "></img>
</div>
  <h1 className=" text-red-600 md:text-2xl  md:mx-[272px] ">why to use opps ‡§ï‡•ç‡§Ø‡•ã‡§Ç ‡§á‡§∏‡•ç‡§§‡•á‡§Æ‡§æ‡§≤ ‡§ï‡§∞‡•á </h1>
<p>

java script ‡§Æ‡•á‡§Ç opps ‡§ï‡§æ use ‡§á‡§∏ ‡§≤‡§ø‡§è ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à ‡§ú‡§ø‡§∏‡§∏‡•á ‡§π‡§Æ‡§ï‡•ã program ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Ü‡§∏‡§æ‡§®‡•Ä ‡§π‡•ã ‡§∏‡§ï‡•á opps ‡§ï‡§æ ‡§ï‡§æ‡§Æ ‡§π‡•ã‡§§‡§æ 
‡§π‡•à ‡§ï‡•Ä program ‡§ï‡•ã ‡§Ü‡§™ ‡§è‡§ï ‡§¨‡§æ‡§∞ ‡§≤‡§ø‡§ñ ‡§ï‡§∞ ‡§ï‡§π‡•Ä ‡§¨‡§æ‡§∞ use ‡§ï‡§∞ ‡§∏‡§ï‡•á <span className=" text-yellow-300   animate-bounce duration-700 ease-in-out">opps</span> ‡§ï‡•á ‡§µ‡§ú‡§π ‡§∏‡•á ‡§π‡§Æ‡§æ‡§∞‡§æ ‡§ï‡§æ‡§Æ ‡§¨‡§π‡•Å‡§§ ‡§π‡•Ä ‡§π‡•ã ‡§ú‡§æ‡§§‡§æ ‡§π‡•à 
‡§¨‡§ø‡§®‡§æ opps ‡§ï‡•á ‡§¨‡§ø‡§®‡§æ ‡§≠‡•Ä ‡§π‡§Æ code ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à ‡§î‡§∞ program ‡§¨‡§®‡§æ ‡§∏‡§ï‡§§‡•á ‡§π‡•à function ‡§ï‡§æ use ‡§ï‡§∞ ‡§ï‡•á ‡§≠‡•Ä ‡§ï‡§æ‡§Æ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à 
‡§≤‡•á‡§ï‡§ø‡§® ‡§è‡§ï ‡§Ö‡§ö‡•ç‡§õ‡§æ ‡§î‡§∞ batter programer ‡§µ‡§π‡•Ä ‡§π‡•à ‡§ú‡§ø‡§∏‡§ï‡•ã opps ‡§ï‡§æ concept ‡§Ü‡§§‡§æ ‡§π‡•ã 

</p>


<h1 className=" text-red-600 md:text-2xl  md:mx-[116px]    ">object oriented programming in ‡§π‡§ø‡§Ç‡§¶‡•Ä (oops in hindi ) </h1>
















,</div>





        
        </div>
    )
  
    
    }
    // export const head = {

    // }
    // export const metadata = {
    //   title: 'what is opps ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à ‡§á‡§∏‡§ï‡§æ use ‡§ï‡•ç‡§Ø‡•ã‡§Ç ‡§ï‡§∞‡•á   ',
    //   description: 'Generated by create next app',
    // }

